name: CI/CD Pipeline

on:
  push:
    branches: [ main ]


env:
  AWS_REGION: ap-south-1
  ECR_REPO: devops-task

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout source
      - name: Checkout
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Build & Test
      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test || true

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Get AWS account ID
      - name: Get AWS Account ID
        id: aws_account
        run: echo "AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      # Build Docker image
      - name: Build Docker image
        run: |
          IMAGE_TAG=${{ github.run_number }}-${GITHUB_SHA::8}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t $ECR_REPO:$IMAGE_TAG .

      # Authenticate Docker to ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      # Tag and Push image
      - name: Push to ECR
        run: |
          docker tag $ECR_REPO:${{ env.IMAGE_TAG }} ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$ECR_REPO:${{ env.IMAGE_TAG }}
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$ECR_REPO:${{ env.IMAGE_TAG }}

      # Deploy to ECS
      - name: Deploy to ECS
        run: |
          chmod +x ./deploy.sh
          ./deploy.sh \
            ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/$ECR_REPO:${{ env.IMAGE_TAG }} \
            $AWS_REGION \
            ${ECS_CLUSTER_NAME:-devops-cluster} \
            ${ECS_SERVICE_NAME:-devops-service}
